// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                                       Int                         @id @default(autoincrement())
  name                                     String                      @default("")
  email                                    String                      @unique @default("")
  password                                 String
  role                                     String
  isProtected                              Boolean                     @default(false)
  from_Post_createdBy                      Post[]                      @relation("Post_createdBy")
  from_Post_updatedBy                      Post[]                      @relation("Post_updatedBy")
  from_Area_createdBy                      Area[]                      @relation("Area_createdBy")
  from_Area_updatedBy                      Area[]                      @relation("Area_updatedBy")
  from_Event_createdBy                     Event[]                     @relation("Event_createdBy")
  from_Event_updatedBy                     Event[]                     @relation("Event_updatedBy")
  from_Election_createdBy                  Election[]                  @relation("Election_createdBy")
  from_Election_updatedBy                  Election[]                  @relation("Election_updatedBy")
  from_ElectionArea_createdBy              ElectionArea[]              @relation("ElectionArea_createdBy")
  from_ElectionArea_updatedBy              ElectionArea[]              @relation("ElectionArea_updatedBy")
  from_Politic_createdBy                   Politic[]                   @relation("Politic_createdBy")
  from_Politic_updatedBy                   Politic[]                   @relation("Politic_updatedBy")
  from_PoliticTimeline_createdBy           PoliticTimeline[]           @relation("PoliticTimeline_createdBy")
  from_PoliticTimeline_updatedBy           PoliticTimeline[]           @relation("PoliticTimeline_updatedBy")
  from_PoliticExpert_createdBy             PoliticExpert[]             @relation("PoliticExpert_createdBy")
  from_PoliticExpert_updatedBy             PoliticExpert[]             @relation("PoliticExpert_updatedBy")
  from_PoliticFactCheck_createdBy          PoliticFactCheck[]          @relation("PoliticFactCheck_createdBy")
  from_PoliticFactCheck_updatedBy          PoliticFactCheck[]          @relation("PoliticFactCheck_updatedBy")
  from_PoliticPositionChange_createdBy     PoliticPositionChange[]     @relation("PoliticPositionChange_createdBy")
  from_PoliticPositionChange_updatedBy     PoliticPositionChange[]     @relation("PoliticPositionChange_updatedBy")
  from_PoliticRepeat_createdBy             PoliticRepeat[]             @relation("PoliticRepeat_createdBy")
  from_PoliticRepeat_updatedBy             PoliticRepeat[]             @relation("PoliticRepeat_updatedBy")
  from_PoliticResponse_createdBy           PoliticResponse[]           @relation("PoliticResponse_createdBy")
  from_PoliticResponse_updatedBy           PoliticResponse[]           @relation("PoliticResponse_updatedBy")
  from_PoliticControversie_createdBy       PoliticControversie[]       @relation("PoliticControversie_createdBy")
  from_PoliticControversie_updatedBy       PoliticControversie[]       @relation("PoliticControversie_updatedBy")
  from_RelatedPost_createdBy               RelatedPost[]               @relation("RelatedPost_createdBy")
  from_RelatedPost_updatedBy               RelatedPost[]               @relation("RelatedPost_updatedBy")
  from_FactcheckPartner_createdBy          FactcheckPartner[]          @relation("FactcheckPartner_createdBy")
  from_FactcheckPartner_updatedBy          FactcheckPartner[]          @relation("FactcheckPartner_updatedBy")
  from_Vote_createdBy                      Vote[]                      @relation("Vote_createdBy")
  from_Vote_updatedBy                      Vote[]                      @relation("Vote_updatedBy")
  from_Person_createdBy                    Person[]                    @relation("Person_createdBy")
  from_Person_updatedBy                    Person[]                    @relation("Person_updatedBy")
  from_Motion_createdBy                    Motion[]                    @relation("Motion_createdBy")
  from_Motion_updatedBy                    Motion[]                    @relation("Motion_updatedBy")
  from_Organization_createdBy              Organization[]              @relation("Organization_createdBy")
  from_Organization_updatedBy              Organization[]              @relation("Organization_updatedBy")
  from_Collaborate_createdBy               Collaborate[]               @relation("Collaborate_createdBy")
  from_Collaborate_updatedBy               Collaborate[]               @relation("Collaborate_updatedBy")
  from_Membership_createdBy                Membership[]                @relation("Membership_createdBy")
  from_Membership_updatedBy                Membership[]                @relation("Membership_updatedBy")
  from_ContactDetail_createdBy             ContactDetail[]             @relation("ContactDetail_createdBy")
  from_ContactDetail_updatedBy             ContactDetail[]             @relation("ContactDetail_updatedBy")
  from_Count_createdBy                     Count[]                     @relation("Count_createdBy")
  from_Count_updatedBy                     Count[]                     @relation("Count_updatedBy")
  from_OrganizationsElection_createdBy     OrganizationsElection[]     @relation("OrganizationsElection_createdBy")
  from_OrganizationsElection_updatedBy     OrganizationsElection[]     @relation("OrganizationsElection_updatedBy")
  from_OrganizationsRelationship_createdBy OrganizationsRelationship[] @relation("OrganizationsRelationship_createdBy")
  from_OrganizationsRelationship_updatedBy OrganizationsRelationship[] @relation("OrganizationsRelationship_updatedBy")
  from_PersonElection_createdBy            PersonElection[]            @relation("PersonElection_createdBy")
  from_PersonElection_updatedBy            PersonElection[]            @relation("PersonElection_updatedBy")
  from_PersonOrganization_createdBy        PersonOrganization[]        @relation("PersonOrganization_createdBy")
  from_PersonOrganization_updatedBy        PersonOrganization[]        @relation("PersonOrganization_updatedBy")
  from_PersonPublication_createdBy         PersonPublication[]         @relation("PersonPublication_createdBy")
  from_PersonPublication_updatedBy         PersonPublication[]         @relation("PersonPublication_updatedBy")
  from_PersonRelationship_createdBy        PersonRelationship[]        @relation("PersonRelationship_createdBy")
  from_PersonRelationship_updatedBy        PersonRelationship[]        @relation("PersonRelationship_updatedBy")
  from_Lawsuit_createdBy                   Lawsuit[]                   @relation("Lawsuit_createdBy")
  from_Lawsuit_updatedBy                   Lawsuit[]                   @relation("Lawsuit_updatedBy")
  from_Tag_createdBy                       Tag[]                       @relation("Tag_createdBy")
  from_Tag_updatedBy                       Tag[]                       @relation("Tag_updatedBy")
  from_PoliticCategory_createdBy           PoliticCategory[]           @relation("PoliticCategory_createdBy")
  from_PoliticCategory_updatedBy           PoliticCategory[]           @relation("PoliticCategory_updatedBy")
  from_Photo_createdBy                     Photo[]                     @relation("Photo_createdBy")
  from_Photo_updatedBy                     Photo[]                     @relation("Photo_updatedBy")
  from_EditingPolitic_createdBy            EditingPolitic[]            @relation("EditingPolitic_createdBy")
  from_EditingPolitic_updatedBy            EditingPolitic[]            @relation("EditingPolitic_updatedBy")
}

model Post {
  id                    Int           @id @default(autoincrement())
  label                 String        @default("")
  other_label           String        @default("")
  role                  String        @default("")
  organization          Organization? @relation("Post_organization", fields: [organizationId], references: [id])
  organizationId        Int?          @map("organization")
  area                  Area?         @relation("Post_area", fields: [areaId], references: [id])
  areaId                Int?          @map("area")
  start_date            DateTime?
  end_date              DateTime?
  links                 String        @default("")
  createdAt             DateTime?
  updatedAt             DateTime?
  createdBy             User?         @relation("Post_createdBy", fields: [createdById], references: [id])
  createdById           Int?          @map("createdBy")
  updatedBy             User?         @relation("Post_updatedBy", fields: [updatedById], references: [id])
  updatedById           Int?          @map("updatedBy")
  from_Membership_posts Membership[]  @relation("Membership_posts")

  @@index([organizationId])
  @@index([areaId])
  @@index([createdById])
  @@index([updatedById])
}

model Area {
  id                   Int            @id @default(autoincrement())
  name                 String         @default("")
  identifiers          String         @default("")
  classification       String         @default("")
  parent               Area?          @relation("Area_parent", fields: [parentId], references: [id])
  parentId             Int?           @map("parent")
  geometry             String         @default("")
  organizations        Organization[] @relation("Area_organizations")
  posts                String         @default("")
  children             Area[]         @relation("Area_children")
  createdAt            DateTime?
  updatedAt            DateTime?
  createdBy            User?          @relation("Area_createdBy", fields: [createdById], references: [id])
  createdById          Int?           @map("createdBy")
  updatedBy            User?          @relation("Area_updatedBy", fields: [updatedById], references: [id])
  updatedById          Int?           @map("updatedBy")
  from_Post_area       Post[]         @relation("Post_area")
  from_Area_parent     Area[]         @relation("Area_parent")
  from_Area_children   Area[]         @relation("Area_children")
  from_Membership_area Membership[]   @relation("Membership_area")

  @@index([parentId])
  @@index([createdById])
  @@index([updatedById])
}

model Event {
  id             Int       @id @default(autoincrement())
  name           String    @default("")
  description    String    @default("")
  start_date     String    @default("")
  end_date       String    @default("")
  location       String    @default("")
  status         String    @default("")
  identifier     String    @default("")
  motion         String    @default("")
  classification String    @default("")
  organization   String    @default("")
  attendees      String    @default("")
  parent         String    @default("")
  sub            String    @default("")
  createdAt      DateTime?
  updatedAt      DateTime?
  createdBy      User?     @relation("Event_createdBy", fields: [createdById], references: [id])
  createdById    Int?      @map("createdBy")
  updatedBy      User?     @relation("Event_updatedBy", fields: [updatedById], references: [id])
  updatedById    Int?      @map("updatedBy")

  @@index([createdById])
  @@index([updatedById])
}

model Election {
  id                                   Int                     @id @default(autoincrement())
  name                                 String                  @default("")
  description                          String                  @default("")
  election_year_year                   Int?
  election_year_month                  Int?
  election_year_day                    Int?
  level                                String?                 @default("local")
  type                                 String?
  register_date                        String                  @default("")
  location                             String                  @default("")
  electionArea                         ElectionArea[]          @relation("ElectionArea_election")
  status                               String?
  hidePoliticDetail                    DateTime?
  tags                                 Tag[]                   @relation("Election_tags")
  addComments                          Boolean                 @default(false)
  organizationsElection                OrganizationsElection?  @relation("Election_organizationsElection", fields: [organizationsElectionId], references: [id])
  organizationsElectionId              Int?                    @map("organizationsElection")
  createdAt                            DateTime?
  updatedAt                            DateTime?
  createdBy                            User?                   @relation("Election_createdBy", fields: [createdById], references: [id])
  createdById                          Int?                    @map("createdBy")
  updatedBy                            User?                   @relation("Election_updatedBy", fields: [updatedById], references: [id])
  updatedById                          Int?                    @map("updatedBy")
  from_RelatedPost_election            RelatedPost[]           @relation("RelatedPost_election")
  from_OrganizationsElection_elections OrganizationsElection[] @relation("OrganizationsElection_elections")
  from_PersonElection_election         PersonElection[]        @relation("PersonElection_election")

  @@index([organizationsElectionId])
  @@index([createdById])
  @@index([updatedById])
}

model ElectionArea {
  id                                     Int              @id @default(autoincrement())
  name                                   String           @default("")
  election                               Election?        @relation("ElectionArea_election", fields: [electionId], references: [id])
  electionId                             Int?             @map("election")
  indigenous                             String?
  description                            String           @default("")
  status                                 String?          @default("active")
  createdAt                              DateTime?
  updatedAt                              DateTime?
  createdBy                              User?            @relation("ElectionArea_createdBy", fields: [createdById], references: [id])
  createdById                            Int?             @map("createdBy")
  updatedBy                              User?            @relation("ElectionArea_updatedBy", fields: [updatedById], references: [id])
  updatedById                            Int?             @map("updatedBy")
  from_PersonElection_electoral_district PersonElection[] @relation("PersonElection_electoral_district")

  @@index([electionId])
  @@index([createdById])
  @@index([updatedById])
}

model Politic {
  id                                  Int                     @id @default(autoincrement())
  person                              PersonElection?         @relation("Politic_person", fields: [personId], references: [id])
  personId                            Int?                    @map("person")
  organization                        OrganizationsElection?  @relation("Politic_organization", fields: [organizationId], references: [id])
  organizationId                      Int?                    @map("organization")
  thread_parent                       Politic?                @relation("Politic_thread_parent", fields: [thread_parentId], references: [id])
  thread_parentId                     Int?                    @map("thread_parent")
  changeLog                           String                  @default("")
  desc                                String                  @default("")
  content                             String                  @default("")
  current_progress                    String?                 @default("no-progress")
  positionChange                      PoliticPositionChange[] @relation("Politic_positionChange")
  factCheck                           PoliticFactCheck[]      @relation("Politic_factCheck")
  expertPoint                         PoliticExpert[]         @relation("Politic_expertPoint")
  repeat                              PoliticRepeat[]         @relation("Politic_repeat")
  controversies                       PoliticControversie[]   @relation("Politic_controversies")
  response                            PoliticResponse[]       @relation("Politic_response")
  source                              String                  @default("")
  contributer                         String                  @default("")
  timeline                            PoliticTimeline[]       @relation("Politic_timeline")
  status                              String?                 @default("notverified")
  tag                                 Tag?                    @relation("Politic_tag", fields: [tagId], references: [id])
  tagId                               Int?                    @map("tag")
  politicCategory                     PoliticCategory?        @relation("Politic_politicCategory", fields: [politicCategoryId], references: [id])
  politicCategoryId                   Int?                    @map("politicCategory")
  checked                             Boolean                 @default(false)
  reviewed                            Boolean                 @default(false)
  createdAt                           DateTime?
  updatedAt                           DateTime?
  createdBy                           User?                   @relation("Politic_createdBy", fields: [createdById], references: [id])
  createdById                         Int?                    @map("createdBy")
  updatedBy                           User?                   @relation("Politic_updatedBy", fields: [updatedById], references: [id])
  updatedById                         Int?                    @map("updatedBy")
  from_Politic_thread_parent          Politic[]               @relation("Politic_thread_parent")
  from_OrganizationsElection_politics OrganizationsElection[] @relation("OrganizationsElection_politics")
  from_PoliticCategory_politics       PoliticCategory[]       @relation("PoliticCategory_politics")
  from_EditingPolitic_thread_parent   EditingPolitic[]        @relation("EditingPolitic_thread_parent")

  @@index([personId])
  @@index([organizationId])
  @@index([thread_parentId])
  @@index([current_progress])
  @@index([status])
  @@index([tagId])
  @@index([politicCategoryId])
  @@index([createdById])
  @@index([updatedById])
}

model PoliticTimeline {
  id             Int              @id @default(autoincrement())
  politic        Politic[]        @relation("Politic_timeline")
  eventDate      DateTime?
  sortOrder      Int?
  content        String           @default("")
  link           String           @default("")
  contributer    String           @default("")
  editingPolitic EditingPolitic[] @relation("EditingPolitic_timeline")
  createdAt      DateTime?
  updatedAt      DateTime?
  createdBy      User?            @relation("PoliticTimeline_createdBy", fields: [createdById], references: [id])
  createdById    Int?             @map("createdBy")
  updatedBy      User?            @relation("PoliticTimeline_updatedBy", fields: [updatedById], references: [id])
  updatedById    Int?             @map("updatedBy")

  @@index([createdById])
  @@index([updatedById])
}

model PoliticExpert {
  id                 Int              @id @default(autoincrement())
  politic            Politic[]        @relation("Politic_expertPoint")
  expert             String           @default("")
  avatar             String           @default("")
  title              String           @default("")
  expertPointSummary String           @default("")
  content            String           @default("")
  link               String           @default("")
  contributer        String           @default("")
  editingPolitic     EditingPolitic[] @relation("EditingPolitic_expertPoint")
  createdAt          DateTime?
  updatedAt          DateTime?
  createdBy          User?            @relation("PoliticExpert_createdBy", fields: [createdById], references: [id])
  createdById        Int?             @map("createdBy")
  updatedBy          User?            @relation("PoliticExpert_updatedBy", fields: [updatedById], references: [id])
  updatedById        Int?             @map("updatedBy")

  @@index([createdById])
  @@index([updatedById])
}

model PoliticFactCheck {
  id                 Int               @id @default(autoincrement())
  politic            Politic[]         @relation("Politic_factCheck")
  factCheckSummary   String            @default("")
  content            String            @default("")
  checkResultType    String?           @default("1")
  checkResultOther   String            @default("")
  link               String            @default("")
  factcheckPartner   FactcheckPartner? @relation("PoliticFactCheck_factcheckPartner", fields: [factcheckPartnerId], references: [id])
  factcheckPartnerId Int?              @map("factcheckPartner")
  editingPolitic     EditingPolitic[]  @relation("EditingPolitic_factCheck")
  createdAt          DateTime?
  updatedAt          DateTime?
  createdBy          User?             @relation("PoliticFactCheck_createdBy", fields: [createdById], references: [id])
  createdById        Int?              @map("createdBy")
  updatedBy          User?             @relation("PoliticFactCheck_updatedBy", fields: [updatedById], references: [id])
  updatedById        Int?              @map("updatedBy")

  @@index([factcheckPartnerId])
  @@index([createdById])
  @@index([updatedById])
}

model PoliticPositionChange {
  id                    Int               @id @default(autoincrement())
  politic               Politic[]         @relation("Politic_positionChange")
  factcheckPartner      FactcheckPartner? @relation("PoliticPositionChange_factcheckPartner", fields: [factcheckPartnerId], references: [id])
  factcheckPartnerId    Int?              @map("factcheckPartner")
  checkDate             DateTime
  positionChangeSummary String            @default("")
  content               String            @default("")
  isChanged             String            @default("same")
  link                  String            @default("")
  editingPolitic        EditingPolitic[]  @relation("EditingPolitic_positionChange")
  createdAt             DateTime?
  updatedAt             DateTime?
  createdBy             User?             @relation("PoliticPositionChange_createdBy", fields: [createdById], references: [id])
  createdById           Int?              @map("createdBy")
  updatedBy             User?             @relation("PoliticPositionChange_updatedBy", fields: [updatedById], references: [id])
  updatedById           Int?              @map("updatedBy")

  @@index([factcheckPartnerId])
  @@index([isChanged])
  @@index([createdById])
  @@index([updatedById])
}

model PoliticRepeat {
  id                 Int               @id @default(autoincrement())
  politic            Politic[]         @relation("Politic_repeat")
  repeatSummary      String            @default("")
  content            String            @default("")
  factcheckPartner   FactcheckPartner? @relation("PoliticRepeat_factcheckPartner", fields: [factcheckPartnerId], references: [id])
  factcheckPartnerId Int?              @map("factcheckPartner")
  link               String            @default("")
  contributer        String            @default("")
  editingPolitic     EditingPolitic[]  @relation("EditingPolitic_repeat")
  createdAt          DateTime?
  updatedAt          DateTime?
  createdBy          User?             @relation("PoliticRepeat_createdBy", fields: [createdById], references: [id])
  createdById        Int?              @map("createdBy")
  updatedBy          User?             @relation("PoliticRepeat_updatedBy", fields: [updatedById], references: [id])
  updatedById        Int?              @map("updatedBy")

  @@index([factcheckPartnerId])
  @@index([createdById])
  @@index([updatedById])
}

model PoliticResponse {
  id             Int              @id @default(autoincrement())
  politic        Politic[]        @relation("Politic_response")
  responseName   String           @default("")
  responsePic    String           @default("")
  responseTitle  String           @default("")
  content        String           @default("")
  link           String           @default("")
  editingPolitic EditingPolitic[] @relation("EditingPolitic_response")
  createdAt      DateTime?
  updatedAt      DateTime?
  createdBy      User?            @relation("PoliticResponse_createdBy", fields: [createdById], references: [id])
  createdById    Int?             @map("createdBy")
  updatedBy      User?            @relation("PoliticResponse_updatedBy", fields: [updatedById], references: [id])
  updatedById    Int?             @map("updatedBy")

  @@index([createdById])
  @@index([updatedById])
}

model PoliticControversie {
  id                 Int               @id @default(autoincrement())
  politic            Politic[]         @relation("Politic_controversies")
  content            String            @default("")
  factcheckPartner   FactcheckPartner? @relation("PoliticControversie_factcheckPartner", fields: [factcheckPartnerId], references: [id])
  factcheckPartnerId Int?              @map("factcheckPartner")
  link               String            @default("")
  editingPolitic     EditingPolitic[]  @relation("EditingPolitic_controversies")
  createdAt          DateTime?
  updatedAt          DateTime?
  createdBy          User?             @relation("PoliticControversie_createdBy", fields: [createdById], references: [id])
  createdById        Int?              @map("createdBy")
  updatedBy          User?             @relation("PoliticControversie_updatedBy", fields: [updatedById], references: [id])
  updatedById        Int?              @map("updatedBy")

  @@index([factcheckPartnerId])
  @@index([createdById])
  @@index([updatedById])
}

model RelatedPost {
  id          Int                @id @default(autoincrement())
  name        String             @default("")
  brief       String             @default("")
  url         String             @default("")
  ogIMage     String             @default("")
  partner     FactcheckPartner[] @relation("FactcheckPartner_posts")
  election    Election[]         @relation("RelatedPost_election")
  createdAt   DateTime?
  updatedAt   DateTime?
  createdBy   User?              @relation("RelatedPost_createdBy", fields: [createdById], references: [id])
  createdById Int?               @map("createdBy")
  updatedBy   User?              @relation("RelatedPost_updatedBy", fields: [updatedById], references: [id])
  updatedById Int?               @map("updatedBy")

  @@index([createdById])
  @@index([updatedById])
}

model FactcheckPartner {
  id             Int                     @id @default(autoincrement())
  name           String                  @default("")
  logo           Photo?                  @relation("FactcheckPartner_logo", fields: [logoId], references: [id])
  logoId         Int?                    @map("logo")
  slogo          Photo?                  @relation("FactcheckPartner_slogo", fields: [slogoId], references: [id])
  slogoId        Int?                    @map("slogo")
  year           String?                 @default("2023")
  type           String?                 @default("合作媒體")
  webUrl         String                  @default("")
  posts          RelatedPost[]           @relation("FactcheckPartner_posts")
  positionChange PoliticPositionChange[] @relation("PoliticPositionChange_factcheckPartner")
  factCheck      PoliticFactCheck[]      @relation("PoliticFactCheck_factcheckPartner")
  repeat         PoliticRepeat[]         @relation("PoliticRepeat_factcheckPartner")
  controversies  PoliticControversie[]   @relation("PoliticControversie_factcheckPartner")
  createdAt      DateTime?
  updatedAt      DateTime?
  createdBy      User?                   @relation("FactcheckPartner_createdBy", fields: [createdById], references: [id])
  createdById    Int?                    @map("createdBy")
  updatedBy      User?                   @relation("FactcheckPartner_updatedBy", fields: [updatedById], references: [id])
  updatedById    Int?                    @map("updatedBy")

  @@index([logoId])
  @@index([slogoId])
  @@index([createdById])
  @@index([updatedById])
}

model Vote {
  id          Int       @id @default(autoincrement())
  vote_event  String    @default("")
  voter       String    @default("")
  option      String    @default("")
  group       String    @default("")
  role        String    @default("")
  weight      String    @default("")
  pair        Person?   @relation("Vote_pair", fields: [pairId], references: [id])
  pairId      Int?      @map("pair")
  createdAt   DateTime?
  updatedAt   DateTime?
  createdBy   User?     @relation("Vote_createdBy", fields: [createdById], references: [id])
  createdById Int?      @map("createdBy")
  updatedBy   User?     @relation("Vote_updatedBy", fields: [updatedById], references: [id])
  updatedById Int?      @map("updatedBy")

  @@index([pairId])
  @@index([createdById])
  @@index([updatedById])
}

model Person {
  id                                        Int                  @id @default(autoincrement())
  name                                      String               @default("")
  alternative                               String?
  other_names                               String?
  email                                     String?
  tags                                      Tag[]                @relation("Person_tags")
  facebook                                  String?
  ig                                        String?
  twitter                                   String?
  gender                                    String?              @default("NA")
  birth_date_year                           Int?
  birth_date_month                          Int?
  birth_date_day                            Int?
  death_date_year                           Int?
  death_date_month                          Int?
  death_date_day                            Int?
  image                                     String?
  summary                                   String?
  biography                                 String?
  national_identity                         String?
  contact_details                           String?
  links                                     String?
  source                                    String?
  status                                    String?              @default("notverified")
  thread_parent                             Person?              @relation("Person_thread_parent", fields: [thread_parentId], references: [id])
  thread_parentId                           Int?                 @map("thread_parent")
  reviewed                                  Boolean              @default(false)
  createdAt                                 DateTime?
  updatedAt                                 DateTime?
  createdBy                                 User?                @relation("Person_createdBy", fields: [createdById], references: [id])
  createdById                               Int?                 @map("createdBy")
  updatedBy                                 User?                @relation("Person_updatedBy", fields: [updatedById], references: [id])
  updatedById                               Int?                 @map("updatedBy")
  from_Vote_pair                            Vote[]               @relation("Vote_pair")
  from_Person_thread_parent                 Person[]             @relation("Person_thread_parent")
  from_Membership_member                    Membership[]         @relation("Membership_member")
  from_PersonElection_person_id             PersonElection[]     @relation("PersonElection_person_id")
  from_PersonOrganization_person_id         PersonOrganization[] @relation("PersonOrganization_person_id")
  from_PersonPublication_person_id          PersonPublication[]  @relation("PersonPublication_person_id")
  from_PersonRelationship_person_id         PersonRelationship[] @relation("PersonRelationship_person_id")
  from_PersonRelationship_related_person_id PersonRelationship[] @relation("PersonRelationship_related_person_id")
  from_Lawsuit_person                       Lawsuit[]            @relation("Lawsuit_person")

  @@index([thread_parentId])
  @@index([createdById])
  @@index([updatedById])
}

model Motion {
  id                  Int       @id @default(autoincrement())
  organization        String    @default("")
  legislative_session String    @default("")
  creator             String    @default("")
  text                String    @default("")
  identifier          String    @default("")
  classification      String    @default("")
  date                String    @default("")
  requirement         String    @default("")
  result              String    @default("")
  vote_events         String    @default("")
  createdAt           DateTime?
  updatedAt           DateTime?
  createdBy           User?     @relation("Motion_createdBy", fields: [createdById], references: [id])
  createdById         Int?      @map("createdBy")
  updatedBy           User?     @relation("Motion_updatedBy", fields: [updatedById], references: [id])
  updatedById         Int?      @map("updatedBy")

  @@index([createdById])
  @@index([updatedById])
}

model Organization {
  id                                                     Int                         @id @default(autoincrement())
  name                                                   String                      @default("")
  alternative                                            String?
  other_names                                            String?
  identifiers                                            String?
  classification                                         String?
  abstract                                               String?
  description                                            String?
  founding_date_year                                     Int?
  founding_date_month                                    Int?
  founding_date_day                                      Int?
  dissolution_date_year                                  Int?
  dissolution_date_month                                 Int?
  dissolution_date_day                                   Int?
  image                                                  String?
  contact_details                                        String?
  links                                                  String?
  address                                                String?
  source                                                 String?
  status                                                 String?
  tags                                                   Tag[]                       @relation("Organization_tags")
  reviewed                                               Boolean                     @default(false)
  createdAt                                              DateTime?
  updatedAt                                              DateTime?
  createdBy                                              User?                       @relation("Organization_createdBy", fields: [createdById], references: [id])
  createdById                                            Int?                        @map("createdBy")
  updatedBy                                              User?                       @relation("Organization_updatedBy", fields: [updatedById], references: [id])
  updatedById                                            Int?                        @map("updatedBy")
  from_Post_organization                                 Post[]                      @relation("Post_organization")
  from_Area_organizations                                Area[]                      @relation("Area_organizations")
  from_Membership_organization                           Membership[]                @relation("Membership_organization")
  from_OrganizationsElection_organization_id             OrganizationsElection[]     @relation("OrganizationsElection_organization_id")
  from_OrganizationsRelationship_organization_id         OrganizationsRelationship[] @relation("OrganizationsRelationship_organization_id")
  from_OrganizationsRelationship_related_organization_id OrganizationsRelationship[] @relation("OrganizationsRelationship_related_organization_id")
  from_PersonElection_party                              PersonElection[]            @relation("PersonElection_party")
  from_PersonOrganization_organization_id                PersonOrganization[]        @relation("PersonOrganization_organization_id")
  from_PersonPublication_organization_id                 PersonPublication[]         @relation("PersonPublication_organization_id")

  @@index([createdById])
  @@index([updatedById])
}

model Collaborate {
  id          Int       @id @default(autoincrement())
  name        String    @default("")
  email       String    @default("")
  feedback    String    @default("")
  createdAt   DateTime?
  updatedAt   DateTime?
  createdBy   User?     @relation("Collaborate_createdBy", fields: [createdById], references: [id])
  createdById Int?      @map("createdBy")
  updatedBy   User?     @relation("Collaborate_updatedBy", fields: [updatedById], references: [id])
  updatedById Int?      @map("updatedBy")

  @@index([createdById])
  @@index([updatedById])
}

model Membership {
  id              Int           @id @default(autoincrement())
  label           String        @default("")
  role            String        @default("")
  member          Person?       @relation("Membership_member", fields: [memberId], references: [id])
  memberId        Int?          @map("member")
  organization    Organization? @relation("Membership_organization", fields: [organizationId], references: [id])
  organizationId  Int?          @map("organization")
  posts           Post?         @relation("Membership_posts", fields: [postsId], references: [id])
  postsId         Int?          @map("posts")
  on_behalf_of_id String        @default("")
  area            Area?         @relation("Membership_area", fields: [areaId], references: [id])
  areaId          Int?          @map("area")
  start_date      DateTime?
  end_date        DateTime?
  links           String        @default("")
  status          String?
  createdAt       DateTime?
  updatedAt       DateTime?
  createdBy       User?         @relation("Membership_createdBy", fields: [createdById], references: [id])
  createdById     Int?          @map("createdBy")
  updatedBy       User?         @relation("Membership_updatedBy", fields: [updatedById], references: [id])
  updatedById     Int?          @map("updatedBy")

  @@index([memberId])
  @@index([organizationId])
  @@index([postsId])
  @@index([areaId])
  @@index([createdById])
  @@index([updatedById])
}

model ContactDetail {
  id          Int       @id @default(autoincrement())
  label       String    @default("")
  type        String    @default("")
  value       String    @default("")
  valid_from  DateTime?
  valid_until DateTime?
  status      String?
  createdAt   DateTime?
  updatedAt   DateTime?
  createdBy   User?     @relation("ContactDetail_createdBy", fields: [createdById], references: [id])
  createdById Int?      @map("createdBy")
  updatedBy   User?     @relation("ContactDetail_updatedBy", fields: [updatedById], references: [id])
  updatedById Int?      @map("updatedBy")

  @@index([createdById])
  @@index([updatedById])
}

model Count {
  id          Int       @id @default(autoincrement())
  option      String    @default("")
  value       String    @default("")
  group       String    @default("")
  createdAt   DateTime?
  updatedAt   DateTime?
  createdBy   User?     @relation("Count_createdBy", fields: [createdById], references: [id])
  createdById Int?      @map("createdBy")
  updatedBy   User?     @relation("Count_updatedBy", fields: [updatedById], references: [id])
  updatedById Int?      @map("updatedBy")

  @@index([createdById])
  @@index([updatedById])
}

model OrganizationsElection {
  id                                  Int              @id @default(autoincrement())
  organization_id                     Organization?    @relation("OrganizationsElection_organization_id", fields: [organization_idId], references: [id])
  organization_idId                   Int?             @map("organization_id")
  election_year_year                  Int?
  election_year_month                 Int?
  election_year_day                   Int?
  number                              String           @default("")
  votes_obtained_number               String           @default("")
  seats                               String           @default("")
  source                              String           @default("")
  elections                           Election?        @relation("OrganizationsElection_elections", fields: [electionsId], references: [id])
  electionsId                         Int?             @map("elections")
  politics                            Politic[]        @relation("OrganizationsElection_politics")
  createdAt                           DateTime?
  updatedAt                           DateTime?
  createdBy                           User?            @relation("OrganizationsElection_createdBy", fields: [createdById], references: [id])
  createdById                         Int?             @map("createdBy")
  updatedBy                           User?            @relation("OrganizationsElection_updatedBy", fields: [updatedById], references: [id])
  updatedById                         Int?             @map("updatedBy")
  from_Election_organizationsElection Election[]       @relation("Election_organizationsElection")
  from_Politic_organization           Politic[]        @relation("Politic_organization")
  from_EditingPolitic_organization    EditingPolitic[] @relation("EditingPolitic_organization")

  @@index([organization_idId])
  @@index([electionsId])
  @@index([createdById])
  @@index([updatedById])
}

model OrganizationsRelationship {
  id                        Int           @id @default(autoincrement())
  organization_id           Organization? @relation("OrganizationsRelationship_organization_id", fields: [organization_idId], references: [id])
  organization_idId         Int?          @map("organization_id")
  related_organization_id   Organization? @relation("OrganizationsRelationship_related_organization_id", fields: [related_organization_idId], references: [id])
  related_organization_idId Int?          @map("related_organization_id")
  relative                  String?
  start_date_year           Int?
  start_date_month          Int?
  start_date_day            Int?
  end_date_year             Int?
  end_date_month            Int?
  end_date_day              Int?
  source                    String?
  createdAt                 DateTime?
  updatedAt                 DateTime?
  createdBy                 User?         @relation("OrganizationsRelationship_createdBy", fields: [createdById], references: [id])
  createdById               Int?          @map("createdBy")
  updatedBy                 User?         @relation("OrganizationsRelationship_updatedBy", fields: [updatedById], references: [id])
  updatedById               Int?          @map("updatedBy")

  @@index([organization_idId])
  @@index([related_organization_idId])
  @@index([createdById])
  @@index([updatedById])
}

model PersonElection {
  id                                Int                 @id @default(autoincrement())
  person_id                         Person?             @relation("PersonElection_person_id", fields: [person_idId], references: [id])
  person_idId                       Int?                @map("person_id")
  election                          Election?           @relation("PersonElection_election", fields: [electionId], references: [id])
  electionId                        Int?                @map("election")
  mainCandidate                     PersonElection?     @relation("PersonElection_mainCandidate", fields: [mainCandidateId], references: [id])
  mainCandidateId                   Int?                @map("mainCandidate")
  party                             Organization?       @relation("PersonElection_party", fields: [partyId], references: [id])
  partyId                           Int?                @map("party")
  legislatoratlarge_number          String              @default("")
  number                            String              @default("")
  electoral_district                ElectionArea?       @relation("PersonElection_electoral_district", fields: [electoral_districtId], references: [id])
  electoral_districtId              Int?                @map("electoral_district")
  votes_obtained_number             String              @default("")
  votes_obtained_percentage         String              @default("")
  elected                           Boolean             @default(false)
  incumbent                         Boolean             @default(false)
  source                            String              @default("")
  politicSource                     String              @default("")
  organization                      PersonOrganization? @relation("PersonElection_organization", fields: [organizationId], references: [id])
  organizationId                    Int?                @unique @map("organization")
  politics                          Politic[]           @relation("Politic_person")
  status                            String?             @default("active")
  editingPolitics                   EditingPolitic[]    @relation("EditingPolitic_person")
  createdAt                         DateTime?
  updatedAt                         DateTime?
  createdBy                         User?               @relation("PersonElection_createdBy", fields: [createdById], references: [id])
  createdById                       Int?                @map("createdBy")
  updatedBy                         User?               @relation("PersonElection_updatedBy", fields: [updatedById], references: [id])
  updatedById                       Int?                @map("updatedBy")
  from_PersonElection_mainCandidate PersonElection[]    @relation("PersonElection_mainCandidate")

  @@index([person_idId])
  @@index([electionId])
  @@index([mainCandidateId])
  @@index([partyId])
  @@index([electoral_districtId])
  @@index([createdById])
  @@index([updatedById])
}

model PersonOrganization {
  id                Int             @id @default(autoincrement())
  person_id         Person?         @relation("PersonOrganization_person_id", fields: [person_idId], references: [id])
  person_idId       Int?            @map("person_id")
  organization_id   Organization?   @relation("PersonOrganization_organization_id", fields: [organization_idId], references: [id])
  organization_idId Int?            @map("organization_id")
  election          PersonElection? @relation("PersonElection_organization")
  role              String?
  start_date_year   Int?
  start_date_month  Int?
  start_date_day    Int?
  end_date_year     Int?
  end_date_month    Int?
  end_date_day      Int?
  source            String?
  createdAt         DateTime?
  updatedAt         DateTime?
  createdBy         User?           @relation("PersonOrganization_createdBy", fields: [createdById], references: [id])
  createdById       Int?            @map("createdBy")
  updatedBy         User?           @relation("PersonOrganization_updatedBy", fields: [updatedById], references: [id])
  updatedById       Int?            @map("updatedBy")

  @@index([person_idId])
  @@index([organization_idId])
  @@index([createdById])
  @@index([updatedById])
}

model PersonPublication {
  id                Int           @id @default(autoincrement())
  person_id         Person?       @relation("PersonPublication_person_id", fields: [person_idId], references: [id])
  person_idId       Int?          @map("person_id")
  organization_id   Organization? @relation("PersonPublication_organization_id", fields: [organization_idId], references: [id])
  organization_idId Int?          @map("organization_id")
  role              String        @default("")
  start_date_year   Int?
  start_date_month  Int?
  start_date_day    Int?
  end_date_year     Int?
  end_date_month    Int?
  end_date_day      Int?
  source            String        @default("")
  createdAt         DateTime?
  updatedAt         DateTime?
  createdBy         User?         @relation("PersonPublication_createdBy", fields: [createdById], references: [id])
  createdById       Int?          @map("createdBy")
  updatedBy         User?         @relation("PersonPublication_updatedBy", fields: [updatedById], references: [id])
  updatedById       Int?          @map("updatedBy")

  @@index([person_idId])
  @@index([organization_idId])
  @@index([createdById])
  @@index([updatedById])
}

model PersonRelationship {
  id                  Int       @id @default(autoincrement())
  person_id           Person?   @relation("PersonRelationship_person_id", fields: [person_idId], references: [id])
  person_idId         Int?      @map("person_id")
  related_person_id   Person?   @relation("PersonRelationship_related_person_id", fields: [related_person_idId], references: [id])
  related_person_idId Int?      @map("related_person_id")
  relative            String    @default("")
  start_date_year     Int?
  start_date_month    Int?
  start_date_day      Int?
  end_date_year       Int?
  end_date_month      Int?
  end_date_day        Int?
  source              Int?
  createdAt           DateTime?
  updatedAt           DateTime?
  createdBy           User?     @relation("PersonRelationship_createdBy", fields: [createdById], references: [id])
  createdById         Int?      @map("createdBy")
  updatedBy           User?     @relation("PersonRelationship_updatedBy", fields: [updatedById], references: [id])
  updatedById         Int?      @map("updatedBy")

  @@index([person_idId])
  @@index([related_person_idId])
  @@index([createdById])
  @@index([updatedById])
}

model Lawsuit {
  id            Int       @id @default(autoincrement())
  person        Person?   @relation("Lawsuit_person", fields: [personId], references: [id])
  personId      Int?      @map("person")
  crime_year    String    @default("")
  desc          String    @default("")
  source        String    @default("")
  contributer   String    @default("")
  judge_number  String    @default("")
  judge_desc    String    @default("")
  judge_content String    @default("")
  status        String?
  createdAt     DateTime?
  updatedAt     DateTime?
  createdBy     User?     @relation("Lawsuit_createdBy", fields: [createdById], references: [id])
  createdById   Int?      @map("createdBy")
  updatedBy     User?     @relation("Lawsuit_updatedBy", fields: [updatedById], references: [id])
  updatedById   Int?      @map("updatedBy")

  @@index([personId])
  @@index([createdById])
  @@index([updatedById])
}

model Tag {
  id                      Int              @id @default(autoincrement())
  name                    String           @unique @default("")
  brief                   String           @default("")
  ogTitle                 String           @default("")
  ogDescription           String           @default("")
  isFeatured              Boolean          @default(false)
  createdAt               DateTime?
  updatedAt               DateTime?
  createdBy               User?            @relation("Tag_createdBy", fields: [createdById], references: [id])
  createdById             Int?             @map("createdBy")
  updatedBy               User?            @relation("Tag_updatedBy", fields: [updatedById], references: [id])
  updatedById             Int?             @map("updatedBy")
  from_Election_tags      Election[]       @relation("Election_tags")
  from_Politic_tag        Politic[]        @relation("Politic_tag")
  from_Person_tags        Person[]         @relation("Person_tags")
  from_Organization_tags  Organization[]   @relation("Organization_tags")
  from_EditingPolitic_tag EditingPolitic[] @relation("EditingPolitic_tag")

  @@index([createdById])
  @@index([updatedById])
}

model PoliticCategory {
  id                                  Int              @id @default(autoincrement())
  name                                String           @unique @default("")
  brief                               String           @default("")
  displayColor                        String           @default("#000000")
  ogTitle                             String           @default("")
  ogDescription                       String           @default("")
  isFeatured                          Boolean          @default(false)
  politics                            Politic[]        @relation("PoliticCategory_politics")
  createdAt                           DateTime?
  updatedAt                           DateTime?
  createdBy                           User?            @relation("PoliticCategory_createdBy", fields: [createdById], references: [id])
  createdById                         Int?             @map("createdBy")
  updatedBy                           User?            @relation("PoliticCategory_updatedBy", fields: [updatedById], references: [id])
  updatedById                         Int?             @map("updatedBy")
  from_Politic_politicCategory        Politic[]        @relation("Politic_politicCategory")
  from_EditingPolitic_politicCategory EditingPolitic[] @relation("EditingPolitic_politicCategory")

  @@index([createdById])
  @@index([updatedById])
}

model Photo {
  id                          Int                @id @default(autoincrement())
  name                        String             @default("")
  imageFile_filesize          Int?
  imageFile_extension         String?
  imageFile_width             Int?
  imageFile_height            Int?
  imageFile_id                String?
  file_filesize               Int?
  file_filename               String?
  urlOriginal                 String             @default("")
  createdAt                   DateTime?
  updatedAt                   DateTime?
  createdBy                   User?              @relation("Photo_createdBy", fields: [createdById], references: [id])
  createdById                 Int?               @map("createdBy")
  updatedBy                   User?              @relation("Photo_updatedBy", fields: [updatedById], references: [id])
  updatedById                 Int?               @map("updatedBy")
  from_FactcheckPartner_logo  FactcheckPartner[] @relation("FactcheckPartner_logo")
  from_FactcheckPartner_slogo FactcheckPartner[] @relation("FactcheckPartner_slogo")

  @@index([createdById])
  @@index([updatedById])
  @@map("Image")
}

model EditingPolitic {
  id                Int                     @id @default(autoincrement())
  person            PersonElection?         @relation("EditingPolitic_person", fields: [personId], references: [id])
  personId          Int?                    @map("person")
  organization      OrganizationsElection?  @relation("EditingPolitic_organization", fields: [organizationId], references: [id])
  organizationId    Int?                    @map("organization")
  thread_parent     Politic?                @relation("EditingPolitic_thread_parent", fields: [thread_parentId], references: [id])
  thread_parentId   Int?                    @map("thread_parent")
  changeLog         String                  @default("")
  desc              String                  @default("")
  content           String                  @default("")
  current_progress  String?                 @default("no-progress")
  positionChange    PoliticPositionChange[] @relation("EditingPolitic_positionChange")
  factCheck         PoliticFactCheck[]      @relation("EditingPolitic_factCheck")
  expertPoint       PoliticExpert[]         @relation("EditingPolitic_expertPoint")
  repeat            PoliticRepeat[]         @relation("EditingPolitic_repeat")
  controversies     PoliticControversie[]   @relation("EditingPolitic_controversies")
  response          PoliticResponse[]       @relation("EditingPolitic_response")
  source            String                  @default("")
  contributer       String                  @default("")
  timeline          PoliticTimeline[]       @relation("EditingPolitic_timeline")
  status            String?                 @default("notverified")
  tag               Tag?                    @relation("EditingPolitic_tag", fields: [tagId], references: [id])
  tagId             Int?                    @map("tag")
  politicCategory   PoliticCategory?        @relation("EditingPolitic_politicCategory", fields: [politicCategoryId], references: [id])
  politicCategoryId Int?                    @map("politicCategory")
  checked           Boolean                 @default(false)
  reviewed          Boolean                 @default(false)
  createdAt         DateTime?
  updatedAt         DateTime?
  createdBy         User?                   @relation("EditingPolitic_createdBy", fields: [createdById], references: [id])
  createdById       Int?                    @map("createdBy")
  updatedBy         User?                   @relation("EditingPolitic_updatedBy", fields: [updatedById], references: [id])
  updatedById       Int?                    @map("updatedBy")

  @@index([personId])
  @@index([organizationId])
  @@index([thread_parentId])
  @@index([current_progress])
  @@index([status])
  @@index([tagId])
  @@index([politicCategoryId])
  @@index([createdById])
  @@index([updatedById])
}
